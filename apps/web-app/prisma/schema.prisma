// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["multiSchema"]
}

generator zod {
  provider = "zod-prisma-types"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String  @id // Should be the clerkId
  email     String  @unique
  firstName String?
  lastName  String?
}

model Agent {
  id           String      @id
  phoneNumber  String
  systemPrompt String
  testAgents   TestAgent[]
  intents      Intent[]
  tests        Test[]
}

model Test {
  id      String @id @default(cuid())
  agent   Agent  @relation(fields: [agentId], references: [id])
  agentId String
  calls   Call[]
}

model TestAgent {
  id          String @id @default(cuid())
  name        String
  headshotUrl String
  description String
  vapiId      String
  agent       Agent  @relation(fields: [agentId], references: [id])
  agentId     String
}

model Intent {
  id          String @id @default(cuid())
  name        String
  description String
  details     String
  agent       Agent  @relation(fields: [agentId], references: [id])
  agentId     String
}

model Call {
  id            String     @id @default(cuid())
  result        CallResult
  failureReason String?
  test          Test       @relation(fields: [testId], references: [id])
  testId        String
  messages      Message[]
  errors        Error[]
}

model Message {
  id      String   @id @default(cuid())
  speaker Speaker
  text    String
  start   DateTime
  end     DateTime
  call    Call     @relation(fields: [callId], references: [id])
  callId  String
}

model Error {
  id          String   @id @default(cuid())
  start       DateTime
  end         DateTime
  type        String
  description String
  call        Call     @relation(fields: [callId], references: [id])
  callId      String
}

enum CallResult {
  SUCCESS
  FAILURE
}

enum Speaker {
  USER
  ASSISTANT
}
