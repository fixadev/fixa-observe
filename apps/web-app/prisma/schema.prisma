// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  clerkId    String      @unique
  email      String      @unique
  firstName  String?
  lastName   String?
  projects   Project[]
  properties Property[]
  Attribute  Attribute[]
}

model Project {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   String   @db.ObjectId
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  surveys   Survey[]
}

model Survey {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  ownerId     String     @db.ObjectId
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  name        String
  projectId   String     @db.ObjectId
  project     Project    @relation(fields: [projectId], references: [id])
  properties  Property[] @relation(fields: [propertyIds], references: [id])
  propertyIds String[]   @db.ObjectId
}

model Property {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  owner       User       @relation(fields: [ownerId], references: [id])
  ownerId     String     @db.ObjectId
  address     String
  brochures   Brochure[]
  brochureIds String[]   @db.ObjectId
  surveys     Survey[]   @relation(fields: [surveyIds], references: [id])
  surveyIds   String[]   @db.ObjectId
  photoUrl    String?
  attributes  Json?      @db.Json
}

model Attribute {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  label     String
  type      String
  owner     User?    @relation(fields: [ownerId], references: [id])
  ownerId   String?  @db.ObjectId
}

model Brochure {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  url        String
  title      String
  property   Property? @relation(fields: [propertyId], references: [id])
  propertyId String?   @db.ObjectId
}
