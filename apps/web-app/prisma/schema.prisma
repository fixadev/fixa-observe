// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  clerkId   String    @unique
  email     String    @unique
  firstName String?
  lastName  String?
  projects  Project[]
}

model Project {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  surveys   Survey[]
}

model Survey {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  ownerId     String   @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  projectId   String   @db.ObjectId
  project     Project  @relation(fields: [projectId], references: [id])
  buildingIds String[]
}

model Building {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  location    String
  description String
  spaces      Space[]
}

model Space {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  buildingId String?   @db.ObjectId
  building   Building? @relation(fields: [buildingId], references: [id])
}
